1.js的作用域针对的是函数中，对象的使用范围，该对象就在该范围里面活动，要想出去怎么办，我常用两个方法，
第一个：就是在紧跟着该函数外面，执行一下，管他外面套了几层呢，
第二个：就是在紧跟在该函数后面执行一下。
eg1:
function a(){
    console.log('哥们是a');
     function b() {
        console.log('妹子是b');
    }
    b();
}
a();
就会输出
VM1028:2 哥们是a
VM1028:4 妹子是b
eg2:
function a(){
    console.log('哥们是a');
     function b() {
        console.log('妹子是b');
    }
    return b();
}
a();
调用a的时候也可以把b执行了
VM1030:2 哥们是a
VM1030:4 妹子是b
项目开发中，其实像这种函数里面写另外一个函数的不常用，大部分的逻辑代码写法是像下面这种
通过this去引用，这样就变成各自是各自的.
function a(){
    var self = this;
    console.log('哥们是a');
    self.b();
}
function b() {
    console.log('妹子是b');
}
a();
VM1044:3 哥们是a
VM1044:7 妹子是b
不过，上面说的两个方法中第二种比较多见，比如你要写一个插件，是要讲函数return出去，好让别的js去引用，当然大型的项目普遍采用require.js的
框架
